<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- dbcp配置文件 -->
	<!-- <context:property-placeholder location="classpath:dbconfig.properties" /> -->
	<!-- 配置datasource dbcp_master -->
	<bean id="dbcp_master" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/cola?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="20" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="120" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="10" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="5000" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180" />
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
		<property name="maxWait" value="5000" />
		<!-- 用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录 -->
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
	</bean>
	<!-- 配置datasource_slave -->
	<bean id="dbcp_slave" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/cola_slave?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="20" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="120" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="10" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="5000" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180" />
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
		<property name="maxWait" value="5000" />
		<!-- 用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录 -->
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
	</bean>

	<!-- 配置动态数据源 -->
	<bean id="dataSource" class="cola.ds.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- write -->
				<entry key="master" value-ref="dbcp_master" />
				<!-- read -->
				<entry key="slave" value-ref="dbcp_slave" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dbcp_master" />
	</bean>

	<!-- aop配置动态数据源 -->
	<!-- 配置数据库注解aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<bean id="dsAspect" class="cola.ds.aspect.DataSourceAspect" />
	<aop:config>
		<aop:aspect id="c" ref="dsAspect">
			<aop:pointcut id="tx" expression="execution(* cola.mapper.*.*(..))" />
			<aop:before pointcut-ref="tx" method="before" />
		</aop:aspect>
	</aop:config>
	<!-- 配置数据库注解aop -->



	<!-- TransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 事务控制 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- mybatis配置sqlsession -->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cola.mapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- redis连接池的配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="5000" />
		<property name="maxTotal" value="5000" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="maxWaitMillis" value="3000" />
	</bean>

	<!-- redis的连接池pool -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="127.0.0.1" type="java.lang.String" />
		<constructor-arg index="2" value="6379" type="int" />
		<constructor-arg index="3" value="6000"
			type="int" />
	</bean>

</beans>
